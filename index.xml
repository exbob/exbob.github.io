<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Shaocheng.Li</title><link>https://shaocheng.li/</link><description>Recent content on Shaocheng.Li</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 07 May 2022 18:34:49 +0800</lastBuildDate><atom:link href="https://shaocheng.li/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux 进程调度的学习笔记</title><link>https://shaocheng.li/posts/2022/05/07/</link><pubDate>Sat, 07 May 2022 18:34:49 +0800</pubDate><guid>https://shaocheng.li/posts/2022/05/07/</guid><description>进程调度的概念比较简单。假设在只有单核处理器的系统中，同一时刻只有一个进程可以拥有处理器资源，那么其他的进程只能在就绪队列（runqueue）中等待，等到处理器空闲之后才有机会获取处理器资源并运行。在这种场景下，操作系统就需要从众多的就绪进程中选择一个最合适的进程来运行，这就是进程调度器（scheduler）。进程调度器产生的最大原因是为了提高处理器的利用率。一个进程在运行的过程中有可能需要等待某些资源，比如等待磁盘操作的完成、等待键盘输入、等待物理页面的分配等。如果处理器和进程一起等待，那么明显会浪费处理器资源，所以一个进程在睡眠等待时，调度器可以调度其他进程来运行，这样就提高了处理器的利用率。</description></item><item><title>Linux 内核数据结构-链表</title><link>https://shaocheng.li/posts/2022/04/20/</link><pubDate>Wed, 20 Apr 2022 18:34:49 +0800</pubDate><guid>https://shaocheng.li/posts/2022/04/20/</guid><description>Linux 内核实现了一个循环双向链表，而且是侵入式链表，核心数据结构定义在 include/linux/types.</description></item><item><title>Linux 内核镜像的类型和区别</title><link>https://shaocheng.li/posts/2022/03/13/</link><pubDate>Sun, 13 Mar 2022 18:34:49 +0800</pubDate><guid>https://shaocheng.li/posts/2022/03/13/</guid><description>原文：https://ineclabs.com/image-zimage-uimage-vmlinuz-linux-kernel/</description></item><item><title>配置 SSH 密钥登录</title><link>https://shaocheng.li/posts/2022/03/11/</link><pubDate>Fri, 11 Mar 2022 14:34:49 +0800</pubDate><guid>https://shaocheng.li/posts/2022/03/11/</guid><description>1. 在客户端电脑生成密钥对 #在客户端电脑上执行如下命令，生成一个密钥对：</description></item><item><title>在 iMX8MM 平台调试 AW-CM276MA Wi-Fi 模块</title><link>https://shaocheng.li/posts/2022/02/01/</link><pubDate>Tue, 01 Feb 2022 16:40:49 +0800</pubDate><guid>https://shaocheng.li/posts/2022/02/01/</guid><description>1. 概述 #硬件平台使用 iMX8MM 参考开发板，带有 M.</description></item><item><title>Linux 下使用 ioctl 接口访问指定网卡</title><link>https://shaocheng.li/posts/2021/10/26/</link><pubDate>Tue, 26 Oct 2021 20:09:49 +0800</pubDate><guid>https://shaocheng.li/posts/2021/10/26/</guid><description>netdevice 是 glibc 提供的访问网卡设备的低级接口，支持标准 ioctl 函数，需要的头文件是：</description></item><item><title>iMX8MM 的 Fuse/OCOPT 学习笔记</title><link>https://shaocheng.li/posts/2021/07/16/</link><pubDate>Fri, 16 Jul 2021 22:22:49 +0800</pubDate><guid>https://shaocheng.li/posts/2021/07/16/</guid><description>Fuse 就是熔丝位，是一种只能写入一次的寄存器，写入后不可更改，所以写入操作也叫做烧毁（burned）。iMX8MM 的 Fuse 由 on-chip eFuse OTP 控制读写，简称 OCOPT ，结构框图如下：</description></item><item><title>iMX8MM 从 eMMC 启动系统和烧写的笔记</title><link>https://shaocheng.li/posts/2021/07/15/</link><pubDate>Thu, 15 Jul 2021 22:32:49 +0800</pubDate><guid>https://shaocheng.li/posts/2021/07/15/</guid><description>1. iMX8MM 的启动流程 # iMX8MM 系统启动的详细流程可以参考 IMX8MMRM.</description></item><item><title>使用 VSCode 绘制数字电路时序图</title><link>https://shaocheng.li/posts/2021/07/03/</link><pubDate>Sat, 03 Jul 2021 18:32:49 +0800</pubDate><guid>https://shaocheng.li/posts/2021/07/03/</guid><description>在 VSCode 中安装 Waveform Render 插件：</description></item><item><title>如何修改 ARM Linux 系统的启动画面</title><link>https://shaocheng.li/posts/2021/05/07/</link><pubDate>Fri, 07 May 2021 20:49:11 +0800</pubDate><guid>https://shaocheng.li/posts/2021/05/07/</guid><description>以 NXP 的 iMX Yocto 4.</description></item><item><title>Linux 系统的 SPI 设备编程</title><link>https://shaocheng.li/posts/2021/04/10/</link><pubDate>Sat, 10 Apr 2021 21:19:11 +0800</pubDate><guid>https://shaocheng.li/posts/2021/04/10/</guid><description>SPI 通信协议 #SPI 的全称是 Serial Peripheral Interface，是一个带时钟同步的全双工串行链接，使用主/从结构，用于连接微控制器和传感器、存储器和外设。常见的连接结构如下：</description></item><item><title>Systemd 中实现自动登录和程序自启动</title><link>https://shaocheng.li/posts/2021/03/06/</link><pubDate>Sat, 06 Mar 2021 21:19:11 +0800</pubDate><guid>https://shaocheng.li/posts/2021/03/06/</guid><description>以 NXP 的 Yocto Linux 4.</description></item><item><title>在 i.MX 6ULL 上学习 Yocto</title><link>https://shaocheng.li/posts/2020/12/12/</link><pubDate>Sat, 12 Dec 2020 18:40:11 +0800</pubDate><guid>https://shaocheng.li/posts/2020/12/12/</guid><description>1. 概述 #NXP 为官方评估板 i.</description></item><item><title>使用 Docker 学习 Redis</title><link>https://shaocheng.li/posts/2020/09/01/</link><pubDate>Tue, 01 Sep 2020 09:53:11 +0800</pubDate><guid>https://shaocheng.li/posts/2020/09/01/</guid><description># 1.</description></item><item><title>epoll 学习笔记</title><link>https://shaocheng.li/posts/2020/08/30/</link><pubDate>Sun, 30 Aug 2020 11:53:11 +0800</pubDate><guid>https://shaocheng.li/posts/2020/08/30/</guid><description>1. 工作原理 #epoll 是 Linux 独有的 I/O 多路复用机制，核心概念就是 epoll 实例，它是一个内核里的数据结构，从用户角度来看它可以简单的看做包含了两个队列：</description></item><item><title>uthash 学习笔记</title><link>https://shaocheng.li/posts/2020/08/29/</link><pubDate>Sat, 29 Aug 2020 11:23:11 +0800</pubDate><guid>https://shaocheng.li/posts/2020/08/29/</guid><description>uthash 是一个 C 语言的哈希表函数库，支持哈希表的各种操作，包括添加，删除，查找，排序等。你可以在 github 上下载到它的源码：</description></item><item><title>libubox 学习笔记</title><link>https://shaocheng.li/posts/2020/07/16/</link><pubDate>Thu, 16 Jul 2020 21:23:11 +0800</pubDate><guid>https://shaocheng.li/posts/2020/07/16/</guid><description>编译安装 #首先要安装一些依赖的软件：</description></item><item><title>CMake 学习笔记</title><link>https://shaocheng.li/posts/2020/06/29/</link><pubDate>Mon, 29 Jun 2020 22:25:11 +0800</pubDate><guid>https://shaocheng.li/posts/2020/06/29/</guid><description>本教程提供了一个渐进式的指导，参考的是官方教程 CMake Tutorial ，然后加入学习过程的笔记。涵盖了使用 CMake 构建一个工程时经常遇到的问题 。通过一个示例项目，展示各种功能是如何一起工作的，这对理解 CMake 非常有用。</description></item><item><title>tcpdump 使用笔记</title><link>https://shaocheng.li/posts/2020/04/12/</link><pubDate>Sun, 12 Apr 2020 22:25:11 +0800</pubDate><guid>https://shaocheng.li/posts/2020/04/12/</guid><description>tcpdump 是一个帮助用户捕获、筛选和解析 TCP/IP 协议数据包的命令行工具。</description></item><item><title>Markdown Syntax Guide</title><link>https://shaocheng.li/posts/2020/01/15/</link><pubDate>Wed, 15 Jan 2020 14:31:11 +0800</pubDate><guid>https://shaocheng.li/posts/2020/01/15/</guid><description>This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.</description></item><item><title>iproute2 学习笔记</title><link>https://shaocheng.li/posts/2020/01/08/</link><pubDate>Wed, 08 Jan 2020 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2020/01/08/</guid><description>iproute2 是一个 Linux 网络管理工具包，提供了 ip 、tc 、ss 等组件，集成了原有的 ifconfg 、arp 、route 、netstat 等多种命令的功能，并新增了很多特性。</description></item><item><title>UCI 和 ubus 学习笔记</title><link>https://shaocheng.li/posts/2019/12/24/</link><pubDate>Tue, 24 Dec 2019 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2019/12/24/</guid><description>UCI 和 ubus 都是 Openwrt 项目提供的软件，UCI 提供了统一的配置文件格式和读写工具，ubus 提供了基于 Unix Socket 的进程间通信框架。两个软件都可以方便的移植到其他 Linux 系统，以 Ubuntu20.</description></item><item><title>Python Socket 编程笔记</title><link>https://shaocheng.li/posts/2019/11/26/</link><pubDate>Tue, 26 Nov 2019 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2019/11/26/</guid><description>1. 套接字 #套接字（Socket）是一种操作系统提供的进程间通信机制，可以用于不同主机间的进程通信，最早由 UNIX 提出，现在广泛用于各种操作系统，同时也特指这种机制下的通信端点。根据通信地址的不同种类，Socket 可以分为三类：</description></item><item><title>Ubuntu 下获取和编译内核源码的方法</title><link>https://shaocheng.li/posts/2019/09/20/</link><pubDate>Fri, 20 Sep 2019 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2019/09/20/</guid><description>以 Ubuntu 16.</description></item><item><title>使用 keepalived 实现双机热备</title><link>https://shaocheng.li/posts/2019/08/24/</link><pubDate>Sat, 24 Aug 2019 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2019/08/24/</guid><description>keepalived 是一个用 C 语言编写的免费开源软件，它实现了 VRRP协议，同时提供了强大的负载均衡 (LVS) 功能。我们可以用他的 VRRP 功能实现路由器或者服务器等网络设备的双机热备。简单的说，两台路由器，一台作为主机，一台作为备机，两台路由器有自己的独立 IP ，同时共享一个虚拟 IP ，主机正常是，这个虚拟 IP 指向主机，当主机出现故障时，虚拟 IP 指向备机，实现了路由器的无缝自动切换。网络拓扑如下图所示：</description></item><item><title>使用 openssl 进行 AES 加密</title><link>https://shaocheng.li/posts/2019/08/18/</link><pubDate>Sun, 18 Aug 2019 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2019/08/18/</guid><description>aes 加密需要一个字符串作为密钥，自己写一个，或者用完成的工具生成一随机的，假设密钥为 passphrase ，加密一个文件 file：</description></item><item><title>使用 OpenVPN 实现远程访问</title><link>https://shaocheng.li/posts/2019/07/02/</link><pubDate>Tue, 02 Jul 2019 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2019/07/02/</guid><description>有时我们需要连接不同局域网的两台主机，使其可以互相访问，比如用家里的电脑登录办公室电脑的某个服务。我们可以使用 OpenVPN 实现这个功能，它的原理是在两台电脑上安装 OpenVPN 客户端，同时连接公网上的 OpenVPN 服务器，OpenVPN 会将这两台电脑组成一个虚拟局域网，它们就可以像局域网内一样互相访问了。搭建 VPN 前的网络拓扑如下：</description></item><item><title>UDP socket 编程实践</title><link>https://shaocheng.li/posts/2018/12/20/</link><pubDate>Thu, 20 Dec 2018 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2018/12/20/</guid><description>UDP 是面向非连接的，如果通讯双方都在局域网中，服务器端和客户端没有区别，如果是局域网内的主机与公网上的主机通讯，由于 NAT 地址转换协议的作用，必须由局域网内的主机主动向公网的主句发送数据，公网的主机作为服务器端，必须接收客户端的数据后，解析出源 IP 和端口，再反向发送，实现双向通讯。下面是一个简单的 Demo 。</description></item><item><title>iptables 学习笔记</title><link>https://shaocheng.li/posts/2018/12/12/</link><pubDate>Wed, 12 Dec 2018 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2018/12/12/</guid><description>关于 iptables 的原理，这里有一份教程写得深入浅出，浅显易懂：</description></item><item><title>用 timedatectl 管理系统时间</title><link>https://shaocheng.li/posts/2018/09/24/</link><pubDate>Mon, 24 Sep 2018 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2018/09/24/</guid><description>查看当前系统时间：</description></item><item><title>包管理器 dnf 学习笔记</title><link>https://shaocheng.li/posts/2018/09/21/</link><pubDate>Fri, 21 Sep 2018 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2018/09/21/</guid><description>dnf 是 Fedora 上的新一代软件包管理器，从 Fedora22 开始取代了原有的 yum 。拥有超级用户权限才可以使用 dnf 在系统上安装、更新和删除软件包。</description></item><item><title>Linux 系统如何获取 CPU 主频</title><link>https://shaocheng.li/posts/2018/08/07/</link><pubDate>Tue, 07 Aug 2018 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2018/08/07/</guid><description>1.CPU 主频 #CPU 的主频是指 CPU 核心的时钟频率，它是 CPU 执行指令的最小时间单位。CPU 内部有时钟管理模块，通过外部振荡器（获取其他时钟电路）输入一个特定的频率（外频），经过内部的 PLL 电路（倍频器）锁定到一个很高的频率，再经过不同的分频，供给不同的模块和总线使用，供给 CPU 的就称为主频,就是通常所说的“主频 = 外频 x 倍频”。目前桌面 X86 CPU 的外频由主板供给，通常是 100MHz ，倍频通常是固定设置的。如果要超频，通常是在主板的 BIOS 中修改倍频因子，也有特殊情况可以增加外频。</description></item><item><title>Linux 内核调试方法</title><link>https://shaocheng.li/posts/2018/07/05/</link><pubDate>Thu, 05 Jul 2018 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2018/07/05/</guid><description>基于 Ubuntu 14.</description></item><item><title>systemd 的网络管理</title><link>https://shaocheng.li/posts/2018/05/09/</link><pubDate>Wed, 09 May 2018 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2018/05/09/</guid><description>0. 简介 #systemd 是 freedesktop 的项目，官网 https://www.</description></item><item><title>Yocto 学习笔记</title><link>https://shaocheng.li/posts/2018/04/27/</link><pubDate>Fri, 27 Apr 2018 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2018/04/27/</guid><description>0. Quick Start #构建一个 yocto 系统镜像的基本流程如下：</description></item><item><title>Libpcap 学习笔记</title><link>https://shaocheng.li/posts/2018/04/23/</link><pubDate>Mon, 23 Apr 2018 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2018/04/23/</guid><description>0. 简介 #libpcap 是用于捕获 TCP/IP 网络数据包的 C/C++ 库，支持 Linux 系统，Tcpdump 就是在其基础上开发的，通常用于网络嗅探、数据抓取、协议分析等，官网是 http://www.</description></item><item><title>Tkinter 学习笔记</title><link>https://shaocheng.li/posts/2017/12/18/</link><pubDate>Mon, 18 Dec 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/12/18/</guid><description>0. 开始 #Tkinter 是 Python 内置的 GUI 框架，安装后 Python 后即可使用：</description></item><item><title>Linux Program Tips</title><link>https://shaocheng.li/posts/2017/12/14/</link><pubDate>Thu, 14 Dec 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/12/14/</guid><description>1. sysconfig() #sysconfig() 是获取系统运行时配置信息的函数，包括内存、CPU 等。函数声明：</description></item><item><title>计算机是如何实现重启的</title><link>https://shaocheng.li/posts/2017/11/30/</link><pubDate>Thu, 30 Nov 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/11/30/</guid><description>1. Soft Power #早期的计算机主板都是使用 AT 电源管理技术，AT 电源系统非常简单，电源键是机械式开关，只有开闭两种状态，闭合后电流从开关上流过为主板供电，断开后主板上的所有器件同时断电，无法实现待机、软关机等功能，这个时期的 Windows 系统关机后会一直显示一条 &amp;ldquo;It is now safe to turn off your computer&amp;rdquo; 的信息，因为操作系统无法切断电源。这时期的电源可以叫做 Hard Power ，因为全部都是硬件控制的。</description></item><item><title>Linux 系统的 USB 设备结构</title><link>https://shaocheng.li/posts/2017/11/28/</link><pubDate>Tue, 28 Nov 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/11/28/</guid><description>以一台 x86 主机为例，用 lsusb 可以查看它的所有 USB 设备：</description></item><item><title>x86 计算机的 PCI 总线结构</title><link>https://shaocheng.li/posts/2017/11/27/</link><pubDate>Mon, 27 Nov 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/11/27/</guid><description>1. 硬件 #PCI 总线是一个并行总线，一个时钟周期有 32 个 bit （后扩展到 64 bit） 同时传输，带宽 133MB/s ，PCI 设备具有独立的地址空间，叫做 PCI 总线地址空间，通过 Host bridge 隔离处理器系统的存储器域与 PCI 总线域，下面挂在了一个 PCI 总线树，典型的结构如下图：</description></item><item><title>Appweb 学习笔记</title><link>https://shaocheng.li/posts/2017/11/24/</link><pubDate>Fri, 24 Nov 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/11/24/</guid><description>1. 概述 #Appweb 是一个快速、高效、安全的开源嵌入式 web server ，同时包含了 ESP web 框架和一系列扩展支持，可以极大的缩短开放时间，官网：https://embedthis.</description></item><item><title>用 seafile 自建云存储</title><link>https://shaocheng.li/posts/2017/11/18/</link><pubDate>Sat, 18 Nov 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/11/18/</guid><description>Seafile 是一款开源的企业云盘，注重可靠性和性能。支持 Windows, Mac, Linux, iOS, Android 平台。支持文件同步或者直接挂载到本地访问，国人开发，官方网站：https://www.</description></item><item><title>用 Supervisor 管理进程</title><link>https://shaocheng.li/posts/2017/11/09/</link><pubDate>Thu, 09 Nov 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/11/09/</guid><description>Supervisor 是一个 Python 编写的进程管理工具，可以帮助我们实现进程的启动、关闭和重启，可以对多个进程独立管理，或者分组管理，通常用于 Linux 服务器的进程管理，官方网站 supervisord.</description></item><item><title>VScode 使用笔记</title><link>https://shaocheng.li/posts/2017/11/07/</link><pubDate>Tue, 07 Nov 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/11/07/</guid><description>1. Python 开发环境 #为 vscode 安装 Python 插件，然后选择 Python 版本：</description></item><item><title>用 pyvenv 创建虚拟环境</title><link>https://shaocheng.li/posts/2017/10/27/</link><pubDate>Fri, 27 Oct 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/10/27/</guid><description>Mac 默认安装的是 Python2.</description></item><item><title>用 VPS 自建科学上网</title><link>https://shaocheng.li/posts/2017/10/17/</link><pubDate>Tue, 17 Oct 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/10/17/</guid><description>1. 购买 VPS #推荐 https://www.</description></item><item><title>Numbers 使用技巧</title><link>https://shaocheng.li/posts/2017/09/23/</link><pubDate>Sat, 23 Sep 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/09/23/</guid><description>1. 自动填充 #有时我们需要将一个单元格的内容复制到整行，或者整列，那么我们可以选中单元格，然后拖动边框的黄点即可：</description></item><item><title>用 iperf 测试网络性能</title><link>https://shaocheng.li/posts/2017/08/01/</link><pubDate>Tue, 01 Aug 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/08/01/</guid><description>iperf 是一个客户端/服务器端工作模式的网络性能测试工具，用于测试 TCP 或者 UDP 的吞吐量，记录延迟、丢包率、MTU等信息。</description></item><item><title>netcat 基本用法</title><link>https://shaocheng.li/posts/2017/07/31/</link><pubDate>Mon, 31 Jul 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/07/31/</guid><description>netcat 是一个任意 TCP 和 UDP 连接和监听的工具，有时别名也叫 nc 。可以用于各种 TCP 或 UDP 相关的任务，包括打开 TCP 连接，发送 UDP 数据包，监听任意 TCP 和 UDP 端口，同时支持 IPv4 和 IPv6 。</description></item><item><title>LeetCode 刷题</title><link>https://shaocheng.li/posts/2017/06/26/</link><pubDate>Mon, 26 Jun 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/06/26/</guid><description>用 LeetCode 练习 Python ，难度都是选择 Easy 。</description></item><item><title>Python 对 list 的处理</title><link>https://shaocheng.li/posts/2017/06/25/</link><pubDate>Sun, 25 Jun 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/06/25/</guid><description>list 是一种有序的数据集合，索引从 0 开始，类似 C 语言中的数组。比如定义一个 list ：</description></item><item><title>Paho JavaScript Client 学习笔记</title><link>https://shaocheng.li/posts/2017/06/13/</link><pubDate>Tue, 13 Jun 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/06/13/</guid><description>Paho JavaScript Client 是一个用 JavaScript 写的，基于浏览器的 MQTT Client 库，用于使用 WebSockets 协议连接 MQTT Broker 。</description></item><item><title>使用 Python 操作 3G 模块</title><link>https://shaocheng.li/posts/2017/06/01/</link><pubDate>Thu, 01 Jun 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/06/01/</guid><description>以 Telit HE910 模块为例，在 Linux 下的 AT 命令端口是 /dev/ttyACM3 。可以通过 pyserial 库直接读写端口来与模块通信，也可以使用更高级的 python-gsmmodem 。</description></item><item><title>Linux Test Project 学习笔记</title><link>https://shaocheng.li/posts/2017/05/24/</link><pubDate>Wed, 24 May 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/05/24/</guid><description>1. 简介 #Linux Test Projec 是一个开源项目，简称 LTP ，致力于提供一套测试工具，用于测试和验证 Linux 内核的功能和稳定性，官网地址：https://linux-test-project.</description></item><item><title>Paho Python Client 学习笔记</title><link>https://shaocheng.li/posts/2017/05/23/</link><pubDate>Tue, 23 May 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/05/23/</guid><description>Paho 是一个开源的 MQTT 客户端项目，提供多种语言的 MQTT 客户端实现，包括 C、C++、C#、Java、Python、JavaScript 等，完全支持 MQTT v3.</description></item><item><title>RSA 加密算法与数字证书</title><link>https://shaocheng.li/posts/2017/05/16/</link><pubDate>Tue, 16 May 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/05/16/</guid><description>1. RSA 加密算法 #RSA 是一种非对称加密算法，同时生成一对密钥，分为公钥和私钥，它有几个重要的特点：</description></item><item><title>RaspberryPi 3 使用笔记</title><link>https://shaocheng.li/posts/2017/05/09/</link><pubDate>Tue, 09 May 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/05/09/</guid><description>0. 准备 # Raspberry Pi 3 Model B 32GB Class10 TF 卡（官方推荐 8GB 以上）和读卡器 5V2A USB 电源，比如 iPad 电源适配器 microUSB 电源线 HDMI 数据线 显示器 USB 键盘 1.</description></item><item><title>Linux 串口编程笔记</title><link>https://shaocheng.li/posts/2017/03/27/</link><pubDate>Mon, 27 Mar 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/03/27/</guid><description>1. 串口简介 #这里的串口是指美国电子工业联盟（EIA）制定的三种串行数据通信的接口标准， RS-232 、RS-485 和 RS422 ，RS-232 是单端信号全双工，RS-485 是差分信号半双工，RS-422 是差分信号全双工。差分信号的通信速率更高，通信距离更长，RS-232 的通信距离通常小于 15 米，而 RS-485 和 RS-422 可以达到 100 米以上。</description></item><item><title>在 ITerm2 中使用 Zmodem 协议传输文件</title><link>https://shaocheng.li/posts/2017/01/10/</link><pubDate>Tue, 10 Jan 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/01/10/</guid><description>Zmodem 是跨平台的文件传输协议，可以很方便的在不同的操作系统之间接传输文件。lzrsz 是该协议的实现方式：https://ohse.</description></item><item><title>Sublime Text 3 常用插件</title><link>https://shaocheng.li/posts/2017/01/07/</link><pubDate>Sat, 07 Jan 2017 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2017/01/07/</guid><description>0. Package Control #用于下载、管理插件的插件，安装方法见项目主页。有时安装后会出现 “There are no packages available for installation” 这样的错误，这是因为无法下载插件资源列表文件。解决方法是在菜单栏中选择 Preferences &amp;gt; Package Settings &amp;gt; Package Control &amp;gt; Settings-User ，在打开的配置文件中添加：</description></item><item><title>推荐一款 Markdown 编辑器</title><link>https://shaocheng.li/posts/2016/12/24/</link><pubDate>Sat, 24 Dec 2016 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2016/12/24/</guid><description>Markdown 语法解决了文本编辑时，内容与样式分离的问题，让我们更专注于内容，少在排版上浪费时间。</description></item><item><title>Linux Wireless HowTo</title><link>https://shaocheng.li/posts/2016/10/26/</link><pubDate>Wed, 26 Oct 2016 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2016/10/26/</guid><description>这里的无线（Wireless）指无线局域网，它的通用标准是 IEEE 802.</description></item><item><title>Linux 3G Module HowTo</title><link>https://shaocheng.li/posts/2016/10/25/</link><pubDate>Tue, 25 Oct 2016 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2016/10/25/</guid><description>Linux 中 3G 模块的层次结构：</description></item><item><title>NetworkManager 使用笔记</title><link>https://shaocheng.li/posts/2016/10/13/</link><pubDate>Thu, 13 Oct 2016 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2016/10/13/</guid><description>NetworkManager 是目前 Linux 系统中提供网络连接管理服务的一套软件，也支持传统的 ifcfg 类型配置文件。核心是 NetworkManager 守护进程，还提供了命令行工具 nmcli ，以及图形界面配置工具。NetworkManager 可用于以下连接类型：以太网、VLAN、网桥、绑定、成组、Wi-Fi、移动宽带（比如移动网络 3G）及 IP-over-InfiniBand。在这些连接类型中，NetworkManager 可配置网络别名、IP 地址、静态路由器、DNS 信息及 VPN 连接以及很多具体连接参数。最后，NetworkManager 通过 D-bus 提供 API，D-Bus 允许应用程序查询并控制网络配置及状态。</description></item><item><title>BitBake 使用笔记</title><link>https://shaocheng.li/posts/2016/09/12/</link><pubDate>Mon, 12 Sep 2016 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2016/09/12/</guid><description>1. 简介 #BitBake 是用 Python 写的一个程序，它是 OpenEmbedded 构建系统时使用的生产工具，现在有很多嵌入式系统都是在使用，比如Yocto 、WindRiver Linux 等。它是一个多任务引擎，可以并行执行 shell 和 Python 任务，每个任务单元根据预定义的元数据来管理源码、配置、编译、打包，并最终将每个任务生成的文件集合成为系统镜像。例如要从源码构建一个 Linux 系统，需要搭建一个生产环境，然后依次生成 Grub、Kernel、各种库文件、各种可执行文件，然后集合到一个文件系统里。如果你玩过 LFS ，就会了解这个过程的复杂性。BitBake 存在的意义就是提供了一个高效的工具，将这个过程标准化、流程化。BitBake 与 GNU Make 的关系就像 GNU Make 之于 GCC ，运作方式也类似 GNU Make ，又有很多不同：</description></item><item><title>Start Developing iOS Apps (Swift)</title><link>https://shaocheng.li/posts/2016/05/06/</link><pubDate>Fri, 06 May 2016 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2016/05/06/</guid><description>原文：Start Developing iOS Apps (Swift)</description></item><item><title>晴天钟 Documentation</title><link>https://shaocheng.li/posts/2016/04/06/</link><pubDate>Wed, 06 Apr 2016 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2016/04/06/</guid><description>1. 简介 #晴天钟是一系列天气预测产品的总称，它们主要提取于美国国家大气海洋局/气候环境预测局(NOAA/NCEP)的“全球预测系统”(Global Forecast System, GFS)数值模式。由叶泉志开发，目前由中国科学院上海天文台中国天文科普网提供硬件及网络支持。</description></item><item><title>Linux 下调试低功耗蓝牙的笔记</title><link>https://shaocheng.li/posts/2016/04/05/</link><pubDate>Tue, 05 Apr 2016 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2016/04/05/</guid><description>蓝牙 4.</description></item><item><title>BlueZ 蓝牙编程笔记</title><link>https://shaocheng.li/posts/2016/03/23/</link><pubDate>Wed, 23 Mar 2016 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2016/03/23/</guid><description>1. 简介 #BlueZ 是 Linux 官方的蓝牙协议栈，官网地址：&amp;lt;www.</description></item><item><title>核桃</title><link>https://shaocheng.li/posts/2016/02/23/</link><pubDate>Tue, 23 Feb 2016 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2016/02/23/</guid><description>朦胧中，好像醒了。</description></item><item><title>Logrotate</title><link>https://shaocheng.li/posts/2016/01/21/</link><pubDate>Thu, 21 Jan 2016 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2016/01/21/</guid><description>在 Linux 系统中存在各种日志文件，例如保存启动信息和内核信息的 /var/log/dmesg ，保存系统日志的 /var/log/syslog 等。如果连续运行时间太长，这些日志会越来越大，最终占据太多系统空间。所以，我们需要定期清理系统日志。Logrotate 的主要功能就是定时将旧的日志文件归档，同时创建一个新的空的日志文件，归档的文件可以选择压缩或者发送到指定的邮箱，这个过程叫做轮替（rotate）：</description></item><item><title>Openemu on Mac</title><link>https://shaocheng.li/posts/2016/01/10/</link><pubDate>Sun, 10 Jan 2016 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2016/01/10/</guid><description>Openemu 是一款多功能游戏机模拟器软件，可以在 Mac 上模拟多种游戏机，从早期的 GBA 到索尼的 PSP ，有了它，我就可以在 Mac 上玩超级马里奥顶蘑菇了。</description></item><item><title>lsof 命令入门</title><link>https://shaocheng.li/posts/2016/01/08/</link><pubDate>Fri, 08 Jan 2016 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2016/01/08/</guid><description>以前只是用 lsof 命令查看某个文件被那些进程打开了，直到看了这篇文章：An lsof Primer ，展示了 lsof 强大的一面。网上有很多翻译，找不到原始版本了，我修改了一些地方。</description></item><item><title>hostapd HOWTO</title><link>https://shaocheng.li/posts/2016/01/01/</link><pubDate>Fri, 01 Jan 2016 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2016/01/01/</guid><description>1. About #hostapd 是一个运行在 Linux 用户空间的 daemon 程序，它可以将 IEEE 802.</description></item><item><title>Git 笔记</title><link>https://shaocheng.li/posts/2015/12/29/</link><pubDate>Tue, 29 Dec 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/12/29/</guid><description>1. 配置 #git 的全局配置文件是用户目录下的 .</description></item><item><title>学习 Swift&amp;iOS</title><link>https://shaocheng.li/posts/2015/11/30/</link><pubDate>Mon, 30 Nov 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/11/30/</guid><description>Swift # The Swift Programming Language 中文版 如果没有苹果电脑，可用 swift 在线编译器 使用 Playground 快速练习 Swift 语法</description></item><item><title>Linux IPv6 HOWTO</title><link>https://shaocheng.li/posts/2015/11/27/</link><pubDate>Fri, 27 Nov 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/11/27/</guid><description>1. What is IPv6 #IPv6 是为了解决 IPv4 地址资源日渐枯竭的问题，使用的是 128bit 地址，可以提供更多的地址空间。IPv6 地址以 16bit 为一组，每组用冒号隔开，可以分为八组，每组以 4 个十六进制数表示，共 32 个十六进制数，例如 2001:0db8:85a3:08d3:1319:8a2e:0370:7344 是一个合法的 IPv6 地址，它又可以分为两个逻辑部分：一个 64 位的网络前缀和一个 64 位的主机地址。</description></item><item><title>Linux 下调试蓝牙模块的笔记</title><link>https://shaocheng.li/posts/2015/10/22/</link><pubDate>Thu, 22 Oct 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/10/22/</guid><description>1. 蓝牙简介 #蓝牙是一种支持设备短距离通信的无线电技术，使用 2.</description></item><item><title>Linux 命令行下的 3G 模块配置工具 comgt</title><link>https://shaocheng.li/posts/2015/09/09/</link><pubDate>Wed, 09 Sep 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/09/09/</guid><description>comgt帮助文档</description></item><item><title>用 Python 解析 GPS 轨迹数据</title><link>https://shaocheng.li/posts/2015/09/08/</link><pubDate>Tue, 08 Sep 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/09/08/</guid><description>常见的 GPS 数据文件格式有 GPS、CVS、KML 等，这些数据格式本身并不复杂，基本都是对坐标点的集合，大部分 GPS 记录仪都支持多种格式的数据文件的导入和导出。但是有时还是需要做格式转换，比如 Google Earth 只支持 KML 格式导入。所以，我准备做一个 GPS 数据格式转换工具，使用 Python，做一个基于命令行的工具。</description></item><item><title>可自定义的 Mac 桌面扩展 Übersicht</title><link>https://shaocheng.li/posts/2015/08/29/</link><pubDate>Sat, 29 Aug 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/08/29/</guid><description>Keep an eye on what is happening on your machine and in the World</description></item><item><title>获得 IP 所在地的网站 freegeoip.net</title><link>https://shaocheng.li/posts/2015/08/22/</link><pubDate>Sat, 22 Aug 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/08/22/</guid><description>About #http://freegeoip.</description></item><item><title>MQTT 协议和 mosquitto</title><link>https://shaocheng.li/posts/2015/08/11/</link><pubDate>Tue, 11 Aug 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/08/11/</guid><description>1. MQTT 介绍 #http://mqtt.</description></item><item><title>Python 的多线程</title><link>https://shaocheng.li/posts/2015/07/27/</link><pubDate>Mon, 27 Jul 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/07/27/</guid><description>Python 的标准库提供了两个模块支持多线程：thread 和 threading ，thread 是低级模块，threading 是对 thread 进行了封装的高级模块，通常直接用 threading 模块。</description></item><item><title>Python 对 JSON 的处理</title><link>https://shaocheng.li/posts/2015/07/21/</link><pubDate>Tue, 21 Jul 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/07/21/</guid><description>1.什么是 JSON #JSON 介绍：http://json.</description></item><item><title>Linux 系统中的时间</title><link>https://shaocheng.li/posts/2015/07/01/</link><pubDate>Wed, 01 Jul 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/07/01/</guid><description>1. 时区 #Linux 系统中通过 /etc/localtime 文件设置系统时区，所有的时区文件在 /usr/share/zoneinfo/ 目录下</description></item><item><title>Python 学习资料</title><link>https://shaocheng.li/posts/2015/06/13/</link><pubDate>Sat, 13 Jun 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/06/13/</guid><description>基础教程： # 廖雪峰的 Python 2.</description></item><item><title>Libmodbus 编程说明</title><link>https://shaocheng.li/posts/2015/05/24/</link><pubDate>Sun, 24 May 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/05/24/</guid><description>项目主页：http://libmodbus.org</description></item><item><title>C 语言日志函数库 zlog</title><link>https://shaocheng.li/posts/2015/02/06/</link><pubDate>Fri, 06 Feb 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/02/06/</guid><description>项目主页：http://hardysimpson.</description></item><item><title>科学上网利器 Shadowsocks</title><link>https://shaocheng.li/posts/2015/01/20/</link><pubDate>Tue, 20 Jan 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/01/20/</guid><description>Shadowsocks 可以为浏览器，支持代理服务器的软件（例如 Dropbox）提供代理服务。</description></item><item><title>Today Scripts —— 通过脚本打造自己的通知栏部件</title><link>https://shaocheng.li/posts/2015/01/10/</link><pubDate>Sat, 10 Jan 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/01/10/</guid><description>OS X Yosemite 新增了一个通知中心，可以在上面放一些小部件。而 Today Script 这个小部件可以让你写自己的脚本，在通知栏显示自己想要的东西。</description></item><item><title>Lua语言学习笔记</title><link>https://shaocheng.li/posts/2015/01/07/</link><pubDate>Wed, 07 Jan 2015 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2015/01/07/</guid><description>Lua （英语发音：/ˈluːə/）是一种轻量级的脚本语言，可以方便的嵌入到其他语言中，很易学习。它是用C语言编写的。广泛应用于游戏和 web 开发中。据说 Adobe Photoshop Lightroom 中 50% 的代码是有 Lua 写的。我学习这个语言是因为目前的项目要用到 LuCI 。</description></item><item><title>2014-12-31</title><link>https://shaocheng.li/posts/2014/12/31/</link><pubDate>Wed, 31 Dec 2014 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2014/12/31/</guid><description>2014年的最后一天了</description></item><item><title>在 Linux 中使用 amixer 设置 Input source</title><link>https://shaocheng.li/posts/2014/10/26/</link><pubDate>Sun, 26 Oct 2014 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2014/10/26/</guid><description>电脑的音频输入通常有两个通道：Mic 和 Line in。Mic就是麦克风，Line in 用于连接未经放大的模拟音频信号，例如 Mp3 播放器的耳机插孔，可以将其连接到 PC 的 Line in 插孔。</description></item><item><title>个性化定制地图 —— Mapbox</title><link>https://shaocheng.li/posts/2014/10/09/</link><pubDate>Thu, 09 Oct 2014 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2014/10/09/</guid><description>Mapbox 想要构建世界上最漂亮的地图。支持多种平台，可以免费创建并定制个性化的地图，实现非常绚丽的效果。</description></item><item><title>Mac OS X 常用软件和技巧</title><link>https://shaocheng.li/posts/2014/09/09/</link><pubDate>Tue, 09 Sep 2014 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2014/09/09/</guid><description>1.键盘操作 #使用 Macbook ，没有合适的鼠标，用了外接键盘后，触摸板也离得远了，尽量是用键盘操作，熟练后效率很高。</description></item><item><title>让 Mac 的 Photoshop CS6 支持 ICO 文件</title><link>https://shaocheng.li/posts/2014/07/12/</link><pubDate>Sat, 12 Jul 2014 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2014/07/12/</guid><description>在 http://www.</description></item><item><title>用 google-code-prettify 实现代码语法高亮</title><link>https://shaocheng.li/posts/2014/07/11/</link><pubDate>Fri, 11 Jul 2014 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2014/07/11/</guid><description>google-code-prettify 可以通过 javascript 和 css 文件为 html 页面实现代码段的语法高亮。</description></item><item><title>在博客添加返回顶部按钮</title><link>https://shaocheng.li/posts/2014/07/09/</link><pubDate>Wed, 09 Jul 2014 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2014/07/09/</guid><description>添加后的效果如右下角。</description></item><item><title>QNX 的 Telnet 和 FTP 服务</title><link>https://shaocheng.li/posts/2013/12/27/</link><pubDate>Fri, 27 Dec 2013 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2013/12/27/</guid><description>Telnet #在QNX中，telnet 服务必须用 inetd启动，所以，先确保 /etc/inetd.</description></item><item><title>Google Fonts</title><link>https://shaocheng.li/posts/2013/10/16/</link><pubDate>Wed, 16 Oct 2013 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2013/10/16/</guid><description>Google Fonts 是一套高品质的 Web 字体，可以通过 Google Fonts API 添加到任意 Web 页面中，只需在 HTML 文件的头部添加一个 stylesheet 链接，然后就可以通过 CSS 使用字体。</description></item><item><title>Font Awesome 矢量字体图标</title><link>https://shaocheng.li/posts/2013/10/15/</link><pubDate>Tue, 15 Oct 2013 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2013/10/15/</guid><description>项目主页：http://fortawesome.github.io/Font-Awesome/</description></item><item><title>Hello Farbox</title><link>https://shaocheng.li/posts/2013/10/12/</link><pubDate>Sat, 12 Oct 2013 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2013/10/12/</guid><description>第一节 #1.</description></item><item><title>QNX 对触摸屏的支持</title><link>https://shaocheng.li/posts/2013/09/15/</link><pubDate>Sun, 15 Sep 2013 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2013/09/15/</guid><description>QNX Neutrino 支持多种触摸屏，可以在官网上查找支持的型号和对应的驱动：</description></item><item><title>QNX 编程</title><link>https://shaocheng.li/posts/2013/07/28/</link><pubDate>Sun, 28 Jul 2013 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2013/07/28/</guid><description>处理中断的线程应该先获得 I/O 权限，调用 ThreadCtl() 函数：</description></item><item><title>QNX下的串口驱动——devc-ser8250</title><link>https://shaocheng.li/posts/2013/06/09/</link><pubDate>Sun, 09 Jun 2013 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2013/06/09/</guid><description>devc-ser8250 是 QNX 下的8250串口驱动，支持8250s, 14450s 和 16550s 。</description></item><item><title>QNX 编程读写 I/O 端口</title><link>https://shaocheng.li/posts/2013/06/02/</link><pubDate>Sun, 02 Jun 2013 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2013/06/02/</guid><description>要读写 I/O 端口，必须获得 I/O 权限，这需要以 root 权限运行线程，并且调用 ThreadCtl() 函数：</description></item><item><title>搭建 QNX 开发环境</title><link>https://shaocheng.li/posts/2013/05/02/</link><pubDate>Thu, 02 May 2013 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2013/05/02/</guid><description>30天评估版页面：http://www.qnx.com/products/evaluation/ 在该页面下载所需软件，并申请 License 。</description></item><item><title>xargs 命令</title><link>https://shaocheng.li/posts/2013/04/28/</link><pubDate>Sun, 28 Apr 2013 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2013/04/28/</guid><description>xagrs &amp;ndash; 从标准输入获得参数并执行命令</description></item><item><title>在 ubuntu 中下载内核源码</title><link>https://shaocheng.li/posts/2013/04/27/</link><pubDate>Sat, 27 Apr 2013 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2013/04/27/</guid><description>下载源码前必须确保已经安装了 dpkg-dev 。使用 apt-get install dpkg-dev 命令安装。</description></item><item><title>GRUB2常用配置</title><link>https://shaocheng.li/posts/2013/04/25/</link><pubDate>Thu, 25 Apr 2013 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2013/04/25/</guid><description>GRUB2 指南中文版</description></item><item><title>Linux 系统下编程控制蜂鸣器</title><link>https://shaocheng.li/posts/2013/01/24/</link><pubDate>Thu, 24 Jan 2013 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2013/01/24/</guid><description>&lt;h2 id="原理" class="relative group">原理 &lt;span class="absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100">&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#%e5%8e%9f%e7%90%86" aria-label="锚点">#&lt;/a>&lt;/span>&lt;/h2>&lt;p>X86架构的蜂鸣器连接图如下：&lt;/p>
&lt;p>




 
 
 
 &lt;figure>
 &lt;img
 class="mx-auto my-0 rounded-md"
 src="./pics_1.JPG"
 alt=""
 
 loading="lazy"
 
 />
 
 &lt;/figure>
 
&lt;/p>
&lt;p>由图可见，蜂鸣器的声调是由定时器8254的计数器2的输出 OUT2 控制的，OUT2 输出一定频率的正弦波就可以驱动蜂鸣器发声。8254 的端口地址是 0x40~0x43 。&lt;/p></description></item><item><title>使用 udev 管理设备</title><link>https://shaocheng.li/posts/2013/01/05/</link><pubDate>Sat, 05 Jan 2013 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2013/01/05/</guid><description>udev 是 linux 2.</description></item><item><title>Linux 字符驱动的基本结构</title><link>https://shaocheng.li/posts/2013/01/04/</link><pubDate>Fri, 04 Jan 2013 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2013/01/04/</guid><description>假设字符设备名为 led ，源文件为led.</description></item><item><title>在 Linux 内核中新增模块代码</title><link>https://shaocheng.li/posts/2012/12/18/</link><pubDate>Tue, 18 Dec 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/12/18/</guid><description>一个最简单的内核模块 #编写一个最简单的内核模块 hellomod，源码 hellomod.</description></item><item><title>Linux 驱动的异步通知</title><link>https://shaocheng.li/posts/2012/11/20/</link><pubDate>Tue, 20 Nov 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/11/20/</guid><description>实现步骤 #假设设备驱动名为 module ，设备的私有数据结构为 module_dev_t ，实现异步通知的步骤如下 ：</description></item><item><title>《Unix Shell 范例精解》第五章 sed 习题</title><link>https://shaocheng.li/posts/2012/11/04/</link><pubDate>Sun, 04 Nov 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/11/04/</guid><description>数据文件 datefile</description></item><item><title>《Unix Shell 范例精解》第四章 grep 习题</title><link>https://shaocheng.li/posts/2012/11/03/</link><pubDate>Sat, 03 Nov 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/11/03/</guid><description>数据文件：</description></item><item><title>sed 学习笔记</title><link>https://shaocheng.li/posts/2012/11/02/</link><pubDate>Fri, 02 Nov 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/11/02/</guid><description>一些选项 # -e script ：添加一套命令，可通过该选项添加多个处理命令 -n ：只打印通过 p 命令匹配到的行 -i ：将修改结果写入文件 -f scriptfile ：使用脚本文件 常用命令 # !</description></item><item><title>awk 实例练习</title><link>https://shaocheng.li/posts/2012/10/28/</link><pubDate>Sun, 28 Oct 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/10/28/</guid><description>测试文件 file 的内容如下：</description></item><item><title>Linux Wireless —— 无线操作模式</title><link>https://shaocheng.li/posts/2012/10/27/</link><pubDate>Sat, 27 Oct 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/10/27/</guid><description>原文： Wireless Operating Modes</description></item><item><title>Linux 系统的电源管理</title><link>https://shaocheng.li/posts/2012/10/23/</link><pubDate>Tue, 23 Oct 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/10/23/</guid><description>现在的 linux 内核支持三种电源管理模式,可以在 /sys/power/state 文件中查看：</description></item><item><title>Sublime Text</title><link>https://shaocheng.li/posts/2012/09/16/</link><pubDate>Sun, 16 Sep 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/09/16/</guid><description>简介 #官方 : http://www.</description></item><item><title>Octopress 使用笔记</title><link>https://shaocheng.li/posts/2012/09/15/</link><pubDate>Sat, 15 Sep 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/09/15/</guid><description>1.代码和语法高亮 #除了 Markdown 语法的缩进方式，在 Octopress 中还多种方式可以在文章中嵌入代码并显示语法高亮：</description></item><item><title>用 Octopress 在 github 上部署博客</title><link>https://shaocheng.li/posts/2012/09/09/</link><pubDate>Sun, 09 Sep 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/09/09/</guid><description>1.准备 # 安装 git</description></item><item><title>在 Redhat9 文本系统上安装 Qt/E 4.4.0</title><link>https://shaocheng.li/posts/2012/06/01/</link><pubDate>Fri, 01 Jun 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/06/01/</guid><description>Qt Embedded 直接依赖 Framebuffer，无需 X-Window。所以要开启 Linux 系统的 Framebuffer 。开启方法是通过 BootLoader 向内核传递参数：</description></item><item><title>Vim/Cscope 教程</title><link>https://shaocheng.li/posts/2012/04/29/</link><pubDate>Sun, 29 Apr 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/04/29/</guid><description>原文：</description></item><item><title>在大项目中使用 Cscope</title><link>https://shaocheng.li/posts/2012/04/28/</link><pubDate>Sat, 28 Apr 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/04/28/</guid><description>原文：</description></item><item><title>建立一个定制内核</title><link>https://shaocheng.li/posts/2012/04/01/</link><pubDate>Sun, 01 Apr 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/04/01/</guid><description>原文：</description></item><item><title>在 Linux 系统中部署 goagent</title><link>https://shaocheng.li/posts/2012/03/23/</link><pubDate>Fri, 23 Mar 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/03/23/</guid><description>Goagent 的项目主页在 googlecode：http://code.</description></item><item><title>牛逼的AA</title><link>https://shaocheng.li/posts/2012/03/05/</link><pubDate>Mon, 05 Mar 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/03/05/</guid><description>也许你还不知道 AA 是什么，但只看那牛逼哄哄的名字，就该知道它绝非善类。</description></item><item><title>X Window 架构概述</title><link>https://shaocheng.li/posts/2012/02/27/</link><pubDate>Mon, 27 Feb 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/02/27/</guid><description>原文：</description></item><item><title>在Fedora7下安装USB无线网卡TL-WN321G</title><link>https://shaocheng.li/posts/2012/01/17/</link><pubDate>Tue, 17 Jan 2012 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2012/01/17/</guid><description>今天是年前最后一天上班，要在 Fedora7 下安装一款 USB 无线网卡—— TP-Link 的 WN321G+，该网卡使用的是 rt73 芯片，属于 Ralink 芯片组，安装过程中遇到了一下问题，最后总算成功了，记录一下。</description></item><item><title>怎样设置Framebuffer</title><link>https://shaocheng.li/posts/2011/12/14/</link><pubDate>Wed, 14 Dec 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/12/14/</guid><description>环境：Redhat9.02</description></item><item><title>使用GNU Autoconf/Automake创建Makefile</title><link>https://shaocheng.li/posts/2011/11/21/</link><pubDate>Mon, 21 Nov 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/11/21/</guid><description>原文：</description></item><item><title>pkg-config指南</title><link>https://shaocheng.li/posts/2011/11/19/</link><pubDate>Sat, 19 Nov 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/11/19/</guid><description>原文：</description></item><item><title>在Redhat9下构建TinyX+GTK图形环境</title><link>https://shaocheng.li/posts/2011/11/15/</link><pubDate>Tue, 15 Nov 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/11/15/</guid><description>&lt;h2 id="概述" class="relative group">概述 &lt;span class="absolute top-0 w-6 transition-opacity opacity-0 -start-6 not-prose group-hover:opacity-100">&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700" style="text-decoration-line: none !important;" href="#%e6%a6%82%e8%bf%b0" aria-label="锚点">#&lt;/a>&lt;/span>&lt;/h2>&lt;p>最近要将 Redhat9.02 移植到一块嵌入式 586 的主板上，空间有限，还要有图形环境，支持中文。所以，要建立一个精简的图像环境，先选择 TinyX+GTK 的方式进行研究。TinyX 是 XFree86 针对嵌入式的编译选项，体积小，启动速度快。
本文使用虚拟机 vmware 安装 Redhat-9.02 文本系统，然后用 XFree86-4.3.0 编译 TinyX ，最后编译 GTK+-2.0。&lt;/p></description></item><item><title>从源码建立XFree86</title><link>https://shaocheng.li/posts/2011/11/08/</link><pubDate>Tue, 08 Nov 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/11/08/</guid><description>原文：</description></item><item><title>不用任何变量，实现strlen函数</title><link>https://shaocheng.li/posts/2011/10/18/</link><pubDate>Tue, 18 Oct 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/10/18/</guid><description>使用递归：</description></item><item><title>Linux系统文本模式下的截屏</title><link>https://shaocheng.li/posts/2011/07/29/</link><pubDate>Fri, 29 Jul 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/07/29/</guid><description>Linux系统文本模式下截屏要用到/dev目录下的vcs设备：</description></item><item><title>Linux下分割、合并文件——dd和cat</title><link>https://shaocheng.li/posts/2011/07/26/</link><pubDate>Tue, 26 Jul 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/07/26/</guid><description>dd的作用是转换和拷贝文件，我们可以利用它来分割文件，相关的选项如下：</description></item><item><title>如何在Linux系统下制作RamDisk</title><link>https://shaocheng.li/posts/2011/07/25/</link><pubDate>Mon, 25 Jul 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/07/25/</guid><description>原文：</description></item><item><title>为Linux系统配置serial console</title><link>https://shaocheng.li/posts/2011/07/22/</link><pubDate>Fri, 22 Jul 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/07/22/</guid><description>原文：</description></item><item><title>补丁的制作和使用</title><link>https://shaocheng.li/posts/2011/07/15/</link><pubDate>Fri, 15 Jul 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/07/15/</guid><description>原理 #现在有一个文件file1，通过修改file1得到了文件file2，然后用diff工具比较file1和file2的差异，得到一个补丁文件file.</description></item><item><title>关于C语言的位移操作</title><link>https://shaocheng.li/posts/2011/07/08/</link><pubDate>Fri, 08 Jul 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/07/08/</guid><description>下面这段代码会输出什么结果？</description></item><item><title>关于函数的指针参数</title><link>https://shaocheng.li/posts/2011/07/01/</link><pubDate>Fri, 01 Jul 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/07/01/</guid><description>先做一道题目：</description></item><item><title>神级排序算法</title><link>https://shaocheng.li/posts/2011/06/28/</link><pubDate>Tue, 28 Jun 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/06/28/</guid><description>下面是一个排序算法，用shell实现的：</description></item><item><title>Unicode编码字符的点阵显示</title><link>https://shaocheng.li/posts/2011/06/13/</link><pubDate>Mon, 13 Jun 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/06/13/</guid><description>对于unicode编码的字符，可以先将unicode编码转换为GBK编码，然后利用GBK点阵字库（gbk.bin)显示字符。一个比较好的编码转换方法是，制作一个按照unicode编码顺序排列的GBK编码表，直接根据unicode编码就可以查到对应的GBK编码，具体的制作方法如下：</description></item><item><title>GBK点阵显示字库的制作和使用</title><link>https://shaocheng.li/posts/2011/06/12/</link><pubDate>Sun, 12 Jun 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/06/12/</guid><description>GBK编码共收录汉字21003个、符号883个，并提供1894个造字码位，简、繁体字融于一库。以两个字节表示一个汉字，编码范围是0x8140~0xfefe，兼容GB2318，并覆盖了unicode中的所有汉字。Win7记事本默认以GBK保存汉字。</description></item><item><title>ASCII字符点阵字库的制作和使用</title><link>https://shaocheng.li/posts/2011/06/08/</link><pubDate>Wed, 08 Jun 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/06/08/</guid><description>开发环境：</description></item><item><title>用getopt处理main函数的参数</title><link>https://shaocheng.li/posts/2011/05/28/</link><pubDate>Sat, 28 May 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/05/28/</guid><description>环境：Fedora12 Gcc4.</description></item><item><title>C语言的参数可变函数</title><link>https://shaocheng.li/posts/2011/05/17/</link><pubDate>Tue, 17 May 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/05/17/</guid><description>环境：fedora12，gcc4.4.4</description></item><item><title>键盘上各个按键的英文名</title><link>https://shaocheng.li/posts/2011/04/10/</link><pubDate>Sun, 10 Apr 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/04/10/</guid><description>**Esc **：escape</description></item><item><title>判断进程是否存在的脚本</title><link>https://shaocheng.li/posts/2011/03/04/</link><pubDate>Fri, 04 Mar 2011 08:00:00 +0800</pubDate><guid>https://shaocheng.li/posts/2011/03/04/</guid><description>test.sh :</description></item></channel></rss>